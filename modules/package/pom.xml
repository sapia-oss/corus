<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <name>Sapia Corus Server Package</name>
  <description>The Corus server package module</description>
  <url>http://www.sapia-oss.org/projects/corus/index.html</url>
  <artifactId>sapia_corus_server_package</artifactId>

  <parent>
    <groupId>org.sapia</groupId>
    <artifactId>sapia_corus_parent</artifactId>
    <version>5.0.5</version>
    <relativePath>../..</relativePath>
  </parent>

  <packaging>jar</packaging>

  <licenses>
    <license>
      <name>GNU General Public License (GPL), version 3</name>
      <url>http://www.gnu.org/licenses/gpl-3.0.txt</url>
    </license>
  </licenses>
  
  <dependencies>

    <dependency>
      <groupId>org.sapia</groupId>
      <artifactId>sapia_corus_server</artifactId>
    </dependency>

    <dependency>
      <groupId>org.sapia</groupId>
      <artifactId>sapia_corus_server</artifactId>
      <classifier>demo</classifier>
    </dependency>

    <dependency>
      <groupId>org.sapia</groupId>
      <artifactId>sapia_corus_server</artifactId>
      <classifier>starter</classifier>
    </dependency>    

  </dependencies>

  <build>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/lib</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>${basedir}/extra-lib</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>${basedir}/etc/demoApp/lib</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>

          <!-- copying server dependencies -->
          <execution>
            <id>copy-server-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/lib/server</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <excludeArtifactIds>sapia_magnet,wrapper</excludeArtifactIds>
            </configuration>
          </execution>

          <!-- copying wrapper.jar (will be zipped only as part of non-windows dists, since
          win dists use the 32 bit or 64 bit version, depending) -->
          <execution>
            <id>copy-wrapper-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/extra-lib/wrapper</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeArtifactIds>wrapper</includeArtifactIds>
            </configuration>
          </execution>          

          <!-- copying VM bootstrap dependencies -->
          <execution>
            <id>copy-vm-bootstrap</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/lib/vm-boot</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeArtifactIds>sapia_as,sapia_corus_iop_api</includeArtifactIds>
            </configuration>
          </execution>

          <!-- copying 3rd-party dependencies -->
          <execution>
            <id>copy-thirdparty</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/lib/thirdparty</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeArtifactIds>sapia_corus_tomcat</includeArtifactIds>
            </configuration>
          </execution>
          
          <!-- copying Java starter dependencies -->
          <execution>
            <id>copy-java-starter-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/lib/java</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeArtifactIds>jdom,sapia_utils,sapia_corus_iop,protobuf-java</includeArtifactIds>
            </configuration>
          </execution>

          <!-- copying Magnet dependencies -->
          <execution>
            <id>copy-magnet-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/lib/magnet</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeArtifactIds>sapia_magnet,ant,bsh,jdom,log4j,piccolo,sapia_console,sapia_utils,sapia_corus_iop,protobuf-java</includeArtifactIds>
            </configuration>
          </execution>          
 
          <!-- unpacking sigar distribution -->
          <execution>
            <id>unpack</id>
            <phase>package</phase>
            <goals>
                <goal>unpack</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/extra-lib/sigar</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includes>*/sigar-bin/lib/*.so,*/sigar-bin/lib/*.sl,*/sigar-bin/lib/*.dylib,*/sigar-bin/lib/*.dll,*/sigar-bin/lib/*.lib</includes>
              <artifactItems>
                  <artifactItem>
							        <groupId>org.hyperic</groupId>
							        <artifactId>sigar-dist</artifactId>
                      <type>zip</type>
                  </artifactItem>
              </artifactItems>
            </configuration>
          </execution>

          <!-- copying Demo dependencies -->
          <execution>
            <id>copy-demo-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/etc/demoApp/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeArtifactIds>jdom,sapia_utils,sapia_corus_iop,simple,sapia_ubik</includeArtifactIds>
            </configuration>
          </execution>
          <!-- copying Demo dependencies -->
          <execution>
            <id>copy-corus-demo-lib</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/etc/demoApp/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeArtifactIds>sapia_corus_server</includeArtifactIds>
              <includeClassifiers>demo</includeClassifiers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <id>make-server-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-linux32-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-linux32.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-linux64-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-linux64.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-osx32-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-osx32.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-osx64-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-osx64.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-solarisx86-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-solaris32-x86.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-solarissparc-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-solaris32-sparc.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-windows32-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-windows32.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-windows64-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-windows64.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-demo-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <includeBaseDirectory>false</includeBaseDirectory>
              <descriptors>
                <descriptor>src/main/assembly/demo.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>

        </executions>
      </plugin>
      
      <!-- skipping deployment to repo of packages generated by this module -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
            <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>
    									org.apache.maven.plugins
    								</groupId>
    								<artifactId>
    									maven-dependency-plugin
    								</artifactId>
    								<versionRange>[2.1,)</versionRange>
    								<goals>
    									<goal>copy-dependencies</goal>
    									<goal>unpack</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore />
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
  </build>
  
  <profiles>
		<profile>
			<id>package-upload</id>
			<build>
				<plugins>
		      <plugin>
		        <groupId>net.ju-n.maven.plugins</groupId>
		        <artifactId>checksum-maven-plugin</artifactId>
		        <executions>
		          <execution>
		            <id>generate-checksums</id>
		            <phase>package</phase>
		            <goals>
		              <goal>files</goal>
		            </goals>
		            <configuration>
									<fileSets>
									  <fileSet>
									    <directory>${project.build.directory}</directory>
									    <includes>
									      <include>*.gz</include>
									      <include>*.zip</include>
									    </includes>
									  </fileSet>
									</fileSets>
									<algorithms>
									  <algorithm>MD5</algorithm>
									</algorithms>
		            </configuration>
		          </execution>
		        </executions>
		      </plugin>
					<plugin>
						<groupId>org.sapia</groupId>
						<artifactId>sapia_mediafire_plugin</artifactId>
						<executions>
							<execution>
								<id>upload-linux-packages</id>
								<phase>package</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
								    <folder>sapiaoss/packages/corus</folder>
									<files>
										<file>${project.build.directory}/sapia_corus_server_package-${project.version}-linux32.tar.gz</file>
										<file>${project.build.directory}/sapia_corus_server_package-${project.version}-linux64.tar.gz</file>
										<file>${project.build.directory}/sapia_corus_server_package-${project.version}-linux32.tar.gz.md5</file>
										<file>${project.build.directory}/sapia_corus_server_package-${project.version}-linux64.tar.gz.md5</file>
									</files>
								</configuration>
							</execution>
							<execution>
								<id>upload-mac-packages</id>
								<phase>package</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
								    <folder>sapiaoss/packages/corus</folder>
									<files>
										<file>${project.build.directory}/sapia_corus_server_package-${project.version}-osx32.tar.gz</file>
										<file>${project.build.directory}/sapia_corus_server_package-${project.version}-osx64.tar.gz</file>
                    <file>${project.build.directory}/sapia_corus_server_package-${project.version}-osx32.tar.gz.md5</file>
                    <file>${project.build.directory}/sapia_corus_server_package-${project.version}-osx64.tar.gz.md5</file>
									</files>
								</configuration>
							</execution>
							<execution>
								<id>upload-solaris-packages</id>
								<phase>package</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
								    <folder>sapiaoss/packages/corus</folder>
									<files>
										<file>${project.build.directory}/sapia_corus_server_package-${project.version}-solaris32-x86.tar.gz</file>
										<file>${project.build.directory}/sapia_corus_server_package-${project.version}-solaris32-sparc.tar.gz</file>
                    <file>${project.build.directory}/sapia_corus_server_package-${project.version}-solaris32-x86.tar.gz.md5</file>
                    <file>${project.build.directory}/sapia_corus_server_package-${project.version}-solaris32-sparc.tar.gz.md5</file>
									</files>
								</configuration>
							</execution>
							<execution>
								<id>upload-win32-packages</id>
								<phase>package</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
								    <folder>sapiaoss/packages/corus</folder>
									<files>
										<file>${project.build.directory}/sapia_corus_server_package-${project.version}-win32.zip</file>
                    <file>${project.build.directory}/sapia_corus_server_package-${project.version}-win32.zip.md5</file>
									</files>
								</configuration>
							</execution>
              <execution>
                <id>upload-win64-packages</id>
                <phase>package</phase>
                <goals>
                  <goal>upload</goal>
                </goals>
                <configuration>
                    <folder>sapiaoss/packages/corus</folder>
                  <files>
                    <file>${project.build.directory}/sapia_corus_server_package-${project.version}-win64.zip</file>
                    <file>${project.build.directory}/sapia_corus_server_package-${project.version}-win64.zip.md5</file>
                  </files>
                </configuration>
              </execution>
							<execution>
								<id>upload-zip-packages</id>
								<phase>package</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
								    <folder>sapiaoss/packages/corus</folder>
									<files>
										<file>${project.build.directory}/sapia_corus_server_package-${project.version}-bin.zip</file>
                    <file>${project.build.directory}/sapia_corus_server_package-${project.version}-bin.zip.md5</file>
                    <file>${project.build.directory}/sapia_corus_server_package-${project.version}-demo.zip.md5</file>										
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
